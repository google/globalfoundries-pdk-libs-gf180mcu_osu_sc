/* Copyright 2022 Google LLC
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
  cell (gf180mcu_osu_sc_gp12t3v3__lshifup) {
    area : 63.18;
    cell_leakage_power : 0.060494;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VDDH) {
      pg_type : primary_power;
      voltage_name : "VDDH";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 0.00059075;
      when : "(A * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0473143;
      when : "(A * Y)";
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      when : "(A * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 0.000899681;
      when : "(!A * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0721833;
      when : "(!A * !Y)";
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 0.000745215;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0597488;
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "A";
      power_down_function : "(!VDDH) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDDH;
      max_capacitance : 2.02733;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.427828, 0.452607, 0.53579, 0.864369, 2.162, 7.1781", \
            "0.504777, 0.52906, 0.611897, 0.93992, 2.23757, 7.25368", \
            "0.713138, 0.739322, 0.821955, 1.14955, 2.44713, 7.46335", \
            "1.2688, 1.29284, 1.37482, 1.70523, 3.0018, 8.01827", \
            "2.56654, 2.59136, 2.6764, 3.00497, 4.29975, 9.31613", \
            "5.46129, 5.48716, 5.57135, 5.90006, 7.19504, 12.209" \
          );
        }
        rise_transition (delay_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.0392651, 0.0680402, 0.189019, 0.682416, 2.59076, 9.9413", \
            "0.0392789, 0.0680387, 0.189018, 0.682474, 2.5907, 9.9413", \
            "0.0392621, 0.068048, 0.189038, 0.682415, 2.59061, 9.9413", \
            "0.0391594, 0.0679978, 0.188928, 0.682474, 2.59028, 9.9413", \
            "0.0407221, 0.0690766, 0.189365, 0.686865, 2.59027, 9.94183", \
            "0.0428359, 0.0707869, 0.189889, 0.682581, 2.59727, 9.94225" \
          );
        }
        cell_fall (delay_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.530467, 0.551772, 0.631609, 0.964559, 2.28318, 7.38069", \
            "0.548339, 0.573436, 0.654432, 0.988571, 2.30785, 7.40549", \
            "0.609884, 0.632875, 0.714745, 1.04847, 2.36765, 7.46535", \
            "0.868228, 0.892387, 0.972887, 1.30698, 2.62605, 7.72374", \
            "1.64246, 1.66535, 1.74577, 2.0777, 3.39466, 8.4919", \
            "3.55503, 3.57807, 3.65427, 3.98896, 5.31504, 10.4115" \
          );
        }
        fall_transition (delay_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.0416146, 0.0665295, 0.174422, 0.629308, 2.39073, 9.17885", \
            "0.041676, 0.0666078, 0.174408, 0.629168, 2.39073, 9.17885", \
            "0.0415099, 0.0663692, 0.174426, 0.629159, 2.3907, 9.17885", \
            "0.0418735, 0.066632, 0.174472, 0.629152, 2.39086, 9.17885", \
            "0.0432552, 0.0681543, 0.176031, 0.630397, 2.39164, 9.17796", \
            "0.0451027, 0.0697659, 0.178472, 0.638524, 2.39914, 9.17816" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "-0.000660622, -0.000660204, -0.000659819, -0.000659648, -0.000659568, -0.000659559", \
            "0.00605375, 0.00604879, 0.00604372, 0.00604152, 0.00604003, 0.00604058", \
            "0.0277891, 0.0277891, 0.0277892, 0.0277892, 0.027789, 0.0277895", \
            "0.0891855, 0.0891848, 0.0891781, 0.089185, 0.0891846, 0.0891844", \
            "0.251216, 0.251214, 0.251232, 0.251233, 0.251275, 0.251107", \
            "0.678057, 0.678057, 0.678054, 0.678116, 0.678093, 0.678032" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.0297742, 0.0297747, 0.0297733, 0.0297726, 0.0297748, 0.0297742", \
            "0.037234, 0.0372328, 0.0372319, 0.0372316, 0.037226, 0.037229", \
            "0.0601515, 0.0602157, 0.0602153, 0.0602149, 0.060215, 0.0602147", \
            "0.120876, 0.120849, 0.120748, 0.120705, 0.120789, 0.120808", \
            "0.283127, 0.283252, 0.283184, 0.283042, 0.283148, 0.283181", \
            "0.710837, 0.71083, 0.710058, 0.709329, 0.70935, 0.709721" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDDH;
        rise_power (power_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.520961, 0.514781, 0.502372, 0.485435, 0.476132, 0.472766", \
            "0.580884, 0.574164, 0.561382, 0.54403, 0.534642, 0.531343", \
            "0.745617, 0.741013, 0.728117, 0.70996, 0.700782, 0.697469", \
            "1.18656, 1.17971, 1.16604, 1.15155, 1.14096, 1.13713", \
            "2.20911, 2.20127, 2.19109, 2.17981, 2.16018, 2.1546", \
            "4.51934, 4.51334, 4.50018, 4.48442, 4.47621, 4.46166" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.615624, 0.604843, 0.587812, 0.573022, 0.56643, 0.564625", \
            "0.603939, 0.596611, 0.580399, 0.567245, 0.56157, 0.55988", \
            "0.609813, 0.599653, 0.584609, 0.570777, 0.565127, 0.563471", \
            "0.767531, 0.759028, 0.742317, 0.728831, 0.723214, 0.721405", \
            "1.35458, 1.3436, 1.32524, 1.3063, 1.29754, 1.29566", \
            "2.84574, 2.83457, 2.80847, 2.78414, 2.77195, 2.77048" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VSS;
        rise_power (power_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.37266, 0.368585, 0.360397, 0.349223, 0.34305, 0.340859", \
            "0.418869, 0.414443, 0.40602, 0.394576, 0.388355, 0.386207", \
            "0.549472, 0.546438, 0.537948, 0.526002, 0.519934, 0.517805", \
            "0.901591, 0.897088, 0.888125, 0.878519, 0.871533, 0.86901", \
            "1.73826, 1.73362, 1.72667, 1.71543, 1.70625, 1.70242", \
            "3.69068, 3.68633, 3.67808, 3.66711, 3.65724, 3.65173" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0776915, 0.205257, 0.54228, 1.43268, 3.78508, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.396581, 0.360536, 0.237805, -0.201593, -0.34305, -0.340859", \
            "0.396334, 0.362567, 0.240375, -0.197949, -0.388355, -0.386207", \
            "0.423254, 0.387594, 0.266127, -0.17268, -0.519934, -0.517805", \
            "0.58799, 0.553291, 0.430972, -0.00768336, -0.871533, -0.86901", \
            "1.13766, 1.10147, 0.977165, 0.535862, -1.12553, -1.70242", \
            "2.55063, 2.51401, 2.38435, 1.93717, 0.276279, -3.65173" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 10;
      capacitance : 0.00541133;
      rise_capacitance : 0.00541133;
      rise_capacitance_range (0.00496689, 0.00541133);
      fall_capacitance : 0.00540794;
      fall_capacitance_range (0.00494382, 0.00540794);
    }
  }
