/* Copyright 2022 Google LLC
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
  cell (gf180mcu_osu_sc_gp12t3v3__lshifup) {
    area : 0;
    cell_leakage_power : 0.060494;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VDDH) {
      pg_type : primary_power;
      voltage_name : "VDDH";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 0.00059075;
      when : "(A * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0473143;
      when : "(A * Y)";
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      when : "(A * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 0.000899681;
      when : "(!A * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0721833;
      when : "(!A * !Y)";
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 0.000745215;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0597488;
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "A";
      power_down_function : "(!VDDH) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDDH;
      max_capacitance : 2.02733;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.428202, 0.450893, 0.535591, 0.864949, 2.16264, 7.17873", \
            "0.506903, 0.529922, 0.613999, 0.942487, 2.24013, 7.25625", \
            "0.715888, 0.742126, 0.824792, 1.15207, 2.44974, 7.46587", \
            "1.27495, 1.29945, 1.38188, 1.71105, 3.00819, 8.024", \
            "2.5667, 2.59165, 2.68109, 3.00955, 4.30457, 9.31993", \
            "5.46129, 5.48716, 5.57135, 5.90006, 7.19504, 12.209" \
          );
        }
        rise_transition (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.0392791, 0.0680349, 0.189031, 0.682475, 2.5907, 9.9413", \
            "0.0392768, 0.0680511, 0.189024, 0.682417, 2.59071, 9.9413", \
            "0.0392691, 0.0680626, 0.189031, 0.682416, 2.59077, 9.9413", \
            "0.0391057, 0.0679967, 0.188977, 0.682474, 2.59073, 9.9413", \
            "0.0407436, 0.06922, 0.189371, 0.686461, 2.59027, 9.9413", \
            "0.0428359, 0.0707869, 0.189889, 0.682581, 2.59727, 9.94225" \
          );
        }
        cell_fall (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.531751, 0.551604, 0.633051, 0.965059, 2.28378, 7.38131", \
            "0.550001, 0.573767, 0.653217, 0.987583, 2.30646, 7.40404", \
            "0.610154, 0.634058, 0.715427, 1.04948, 2.3688, 7.46638", \
            "0.870861, 0.895017, 0.975473, 1.30966, 2.62869, 7.72632", \
            "1.64595, 1.66838, 1.74925, 2.08117, 3.39817, 8.49537", \
            "3.55503, 3.57807, 3.65427, 3.98896, 5.31504, 10.4115" \
          );
        }
        fall_transition (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.0414591, 0.0664763, 0.174423, 0.629059, 2.39073, 9.17885", \
            "0.0415848, 0.0666341, 0.174416, 0.629169, 2.39073, 9.17885", \
            "0.0414394, 0.0665977, 0.174427, 0.629153, 2.39073, 9.17885", \
            "0.0418759, 0.0666333, 0.174473, 0.629049, 2.3908, 9.17785", \
            "0.0432362, 0.0680099, 0.176039, 0.63041, 2.39173, 9.17796", \
            "0.0451027, 0.069766, 0.178472, 0.638524, 2.39914, 9.17816" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "-0.00063609, -0.000635547, -0.000635049, -0.000634834, -0.000634724, -0.000634709", \
            "0.00622106, 0.00620193, 0.00619627, 0.00619374, 0.00619264, 0.0061927", \
            "0.0281023, 0.0281023, 0.0281024, 0.0281025, 0.0281027, 0.0281027", \
            "0.0897048, 0.0897039, 0.0897025, 0.089701, 0.0897011, 0.0897016", \
            "0.252065, 0.25211, 0.251982, 0.251835, 0.251875, 0.252012", \
            "0.678057, 0.678057, 0.678054, 0.678115, 0.678094, 0.678032" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.0298761, 0.0298758, 0.029879, 0.0298784, 0.0298806, 0.0298799", \
            "0.0374407, 0.0374408, 0.0374393, 0.0374375, 0.0374373, 0.037437", \
            "0.0604766, 0.0605439, 0.0605433, 0.0605412, 0.0605429, 0.0605425", \
            "0.121466, 0.12144, 0.121363, 0.121341, 0.121399, 0.121372", \
            "0.283929, 0.283961, 0.283884, 0.283757, 0.283864, 0.283878", \
            "0.710837, 0.710832, 0.710058, 0.709329, 0.70935, 0.709721" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDDH;
        rise_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.521122, 0.51276, 0.502008, 0.48589, 0.476653, 0.473287", \
            "0.582907, 0.574737, 0.563367, 0.546256, 0.537025, 0.533683", \
            "0.747787, 0.743256, 0.73032, 0.711877, 0.70251, 0.699267", \
            "1.19184, 1.18547, 1.1724, 1.1564, 1.14578, 1.1419", \
            "2.20855, 2.20093, 2.19458, 2.18242, 2.16375, 2.15772", \
            "4.51934, 4.51334, 4.50018, 4.48441, 4.47621, 4.46166" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.616497, 0.604194, 0.588676, 0.572646, 0.566198, 0.564398", \
            "0.604777, 0.596095, 0.578537, 0.565614, 0.559419, 0.557684", \
            "0.609144, 0.600307, 0.584544, 0.571218, 0.565563, 0.563899", \
            "0.769377, 0.760873, 0.744138, 0.730582, 0.725119, 0.723196", \
            "1.35807, 1.34572, 1.328, 1.30899, 1.30022, 1.29829", \
            "2.84574, 2.83457, 2.80847, 2.78414, 2.77195, 2.77048" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VSS;
        rise_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.372797, 0.367281, 0.360188, 0.349552, 0.343423, 0.341232", \
            "0.420307, 0.414961, 0.407473, 0.396193, 0.390047, 0.387897", \
            "0.55122, 0.548235, 0.53972, 0.527584, 0.521411, 0.519309", \
            "0.905593, 0.901402, 0.892807, 0.882239, 0.875206, 0.872675", \
            "1.73861, 1.73406, 1.72975, 1.71811, 1.7092, 1.70538", \
            "3.69068, 3.68633, 3.67808, 3.66711, 3.65724, 3.65173" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00919271, 0.0354253, 0.136516, 0.526083, 2.02733");
          values ( \
            "0.397253, 0.360201, 0.23847, -0.201747, -0.343423, -0.341232", \
            "0.397032, 0.362372, 0.239292, -0.198872, -0.390047, -0.387897", \
            "0.423137, 0.38835, 0.266408, -0.172069, -0.521411, -0.519309", \
            "0.589798, 0.555094, 0.432981, -0.00587224, -0.875206, -0.872675", \
            "1.14012, 1.10358, 0.979665, 0.538402, -1.12301, -1.70538", \
            "2.55063, 2.51402, 2.38435, 1.93717, 0.276279, -3.65173" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 10;
      capacitance : 0.00540886;
      rise_capacitance : 0.00540886;
      rise_capacitance_range (0.00497215, 0.00540886);
      fall_capacitance : 0.00540794;
      fall_capacitance_range (0.00494576, 0.00540794);
    }
  }
