/* Copyright 2022 Google LLC
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
  cell (gf180mcu_osu_sc_gp12t3v3__lshifdown) {
    area : 0;
    cell_leakage_power : 0.0296423;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VDDH) {
      pg_type : primary_power;
      voltage_name : "VDDH";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 0.000899681;
      when : "(A * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0323507;
      when : "(A * Y)";
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      when : "(A * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 0.0185524;
      when : "(!A * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.00748179;
      when : "(!A * !Y)";
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 0.00972604;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.0199163;
      related_pg_pin : VDDH;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 1.54316;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0890892, 0.119206, 0.223455, 0.596069, 1.95077, 6.89246", \
            "0.107614, 0.138204, 0.242845, 0.615967, 1.97102, 6.91247", \
            "0.13408, 0.167688, 0.27789, 0.652708, 2.00813, 6.94991", \
            "0.161996, 0.199992, 0.324639, 0.727423, 2.0862, 7.02884", \
            "0.168487, 0.213191, 0.355408, 0.82, 2.26171, 7.20584", \
            "0.0904587, 0.147824, 0.316281, 0.854783, 2.52275, 7.63192" \
          );
        }
        rise_transition (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0351391, 0.0740112, 0.220181, 0.754399, 2.70476, 9.81975", \
            "0.0376169, 0.0760482, 0.220614, 0.754528, 2.70479, 9.81967", \
            "0.0434751, 0.0836678, 0.227456, 0.755357, 2.70472, 9.81966", \
            "0.05348, 0.0969893, 0.254164, 0.778233, 2.70547, 9.8198", \
            "0.0734582, 0.120369, 0.294182, 0.871778, 2.75813, 9.81948", \
            "0.115098, 0.169404, 0.361898, 1.0143, 3.04827, 9.90029" \
          );
        }
        cell_fall (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0687021, 0.0872943, 0.14432, 0.344076, 1.07089, 3.72313", \
            "0.0905296, 0.110805, 0.170107, 0.370219, 1.0975, 3.7494", \
            "0.126604, 0.151383, 0.217065, 0.423915, 1.15213, 3.80395", \
            "0.186464, 0.21877, 0.296099, 0.52378, 1.26952, 3.92193", \
            "0.29427, 0.336269, 0.437805, 0.692272, 1.51386, 4.20129", \
            "0.509294, 0.566322, 0.701783, 1.01416, 1.92738, 4.85906" \
          );
        }
        fall_transition (delay_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0234645, 0.0446055, 0.12289, 0.417758, 1.49724, 5.43705", \
            "0.0281036, 0.0487329, 0.125203, 0.417772, 1.49763, 5.43705", \
            "0.0387342, 0.059325, 0.134929, 0.422494, 1.4976, 5.43705", \
            "0.0555012, 0.0808583, 0.154908, 0.449942, 1.50587, 5.43748", \
            "0.0856655, 0.117025, 0.198444, 0.494917, 1.58866, 5.44466", \
            "0.142138, 0.183825, 0.285331, 0.581909, 1.73882, 5.64988" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0263464, 0.027403, 0.0289556, 0.0299599, 0.0303356, 0.0304499", \
            "0.0263936, 0.0270628, 0.0283119, 0.0295421, 0.0301737, 0.0304436", \
            "0.0274649, 0.0274157, 0.0280466, 0.0290911, 0.02998, 0.0302837", \
            "0.0302845, 0.0291621, 0.0284653, 0.0288899, 0.0296419, 0.0301966", \
            "0.0389396, 0.0357922, 0.0321705, 0.0299535, 0.0296714, 0.0299818", \
            "0.0640152, 0.058967, 0.0500214, 0.0407944, 0.034555, 0.0331994" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "-0.00723005, -0.00664162, -0.0059873, -0.00564623, -0.00552118, -0.00555843", \
            "-0.00663977, -0.00659709, -0.00618232, -0.00573785, -0.00556777, -0.00550792", \
            "-0.00418026, -0.00498414, -0.00566031, -0.00571595, -0.00552951, -0.00551448", \
            "0.00202333, -1.83468e-05, -0.00292195, -0.00480243, -0.00537661, -0.00542878", \
            "0.0188711, 0.0146569, 0.00781579, 0.000656311, -0.00366501, -0.00500174", \
            "0.0548496, 0.0486587, 0.0380852, 0.0206202, 0.00473093, -0.00244989" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDDH;
        rise_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.00816267, 0.00818603, 0.00809478, 0.0080909, 0.00808775, 0.00808855", \
            "0.0477648, 0.0477098, 0.0478234, 0.0476884, 0.0477159, 0.0476996", \
            "0.166366, 0.166189, 0.166444, 0.166809, 0.166875, 0.166666", \
            "0.493427, 0.492224, 0.49061, 0.49102, 0.493133, 0.493585", \
            "1.36105, 1.36294, 1.361, 1.35368, 1.3572, 1.36037", \
            "3.63074, 3.63071, 3.63119, 3.62795, 3.62064, 3.62597" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.110364, 0.110426, 0.11034, 0.110504, 0.110386, 0.110418", \
            "0.150437, 0.150382, 0.150429, 0.150663, 0.150394, 0.150337", \
            "0.270429, 0.270266, 0.269981, 0.270752, 0.270845, 0.270885", \
            "0.599838, 0.597331, 0.596164, 0.595078, 0.59595, 0.598071", \
            "1.46427, 1.46688, 1.46929, 1.46169, 1.45853, 1.46155", \
            "3.72866, 3.72889, 3.72919, 3.72977, 3.73003, 3.72804" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VSS;
        rise_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0658842, 0.0668894, 0.0685201, 0.0695182, 0.0698945, 0.0700059", \
            "0.0920738, 0.092748, 0.0939836, 0.0953408, 0.0959433, 0.0962003", \
            "0.171589, 0.171469, 0.17207, 0.173397, 0.174343, 0.174825", \
            "0.390296, 0.388351, 0.386604, 0.387071, 0.389358, 0.390171", \
            "0.971574, 0.96978, 0.964845, 0.957714, 0.959554, 0.962132", \
            "2.49449, 2.48942, 2.48102, 2.46959, 2.45818, 2.45924" \
          );
        }
        fall_power (power_template) {
          index_1 ("0.0787954, 0.207587, 0.546891, 1.44079, 3.79577, 10");
          index_2 ("0.00238547, 0.00870444, 0.031762, 0.115898, 0.422906, 1.54316");
          values ( \
            "0.0314787, 0.0320088, 0.0326572, 0.0328971, 0.0330791, 0.033087", \
            "0.0583226, 0.0584486, 0.0588968, 0.0591648, 0.0594804, 0.0595824", \
            "0.139863, 0.138964, 0.138315, 0.138797, 0.138986, 0.138852", \
            "0.363537, 0.360024, 0.35613, 0.353796, 0.353983, 0.354655", \
            "0.951011, 0.948643, 0.943098, 0.931084, 0.925045, 0.925673", \
            "2.48153, 2.47544, 2.46505, 2.44793, 2.43222, 2.42425" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDDH;
      max_transition : 10;
      capacitance : 0.0041714;
      rise_capacitance : 0.0041714;
      rise_capacitance_range (0.00404489, 0.0041714);
      fall_capacitance : 0.00416835;
      fall_capacitance_range (0.00383068, 0.00416835);
    }
  }
